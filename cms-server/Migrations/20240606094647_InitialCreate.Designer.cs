// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cms_server.Data;

#nullable disable

namespace cms_server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240606094647_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cms_server.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tháp A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tháp B"
                        });
                });

            modelBuilder.Entity("cms_server.Models.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            Name = "Floor 1"
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 1,
                            Name = "Floor 2"
                        },
                        new
                        {
                            Id = 3,
                            BuildingId = 1,
                            Name = "Floor 3"
                        },
                        new
                        {
                            Id = 4,
                            BuildingId = 2,
                            Name = "Floor 1"
                        },
                        new
                        {
                            Id = 5,
                            BuildingId = 2,
                            Name = "Floor 2"
                        },
                        new
                        {
                            Id = 6,
                            BuildingId = 2,
                            Name = "Floor 3"
                        });
                });

            modelBuilder.Entity("cms_server.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("cms_server.Models.Niche", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Niches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 2,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 3,
                            SectionId = 5,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 4,
                            SectionId = 5,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 5,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 6,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 7,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 8,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 9,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 10,
                            SectionId = 3,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 11,
                            SectionId = 1,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 12,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 13,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 14,
                            SectionId = 1,
                            Status = "available"
                        },
                        new
                        {
                            Id = 15,
                            SectionId = 4,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 16,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 17,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 18,
                            SectionId = 4,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 19,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 20,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 21,
                            SectionId = 1,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 22,
                            SectionId = 3,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 23,
                            SectionId = 5,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 24,
                            SectionId = 1,
                            Status = "available"
                        },
                        new
                        {
                            Id = 25,
                            SectionId = 3,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 26,
                            SectionId = 6,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 27,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 28,
                            SectionId = 2,
                            Status = "available"
                        },
                        new
                        {
                            Id = 29,
                            SectionId = 4,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 30,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 31,
                            SectionId = 2,
                            Status = "available"
                        },
                        new
                        {
                            Id = 32,
                            SectionId = 4,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 33,
                            SectionId = 4,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 34,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 35,
                            SectionId = 5,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 36,
                            SectionId = 5,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 37,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 38,
                            SectionId = 6,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 39,
                            SectionId = 4,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 40,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 41,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 42,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 43,
                            SectionId = 4,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 44,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 45,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 46,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 47,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 48,
                            SectionId = 4,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 49,
                            SectionId = 1,
                            Status = "available"
                        },
                        new
                        {
                            Id = 50,
                            SectionId = 6,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 51,
                            SectionId = 5,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 52,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 53,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 54,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 55,
                            SectionId = 2,
                            Status = "available"
                        },
                        new
                        {
                            Id = 56,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 57,
                            SectionId = 5,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 58,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 59,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 60,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 61,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 62,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 63,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 64,
                            SectionId = 3,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 65,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 66,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 67,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 68,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 69,
                            SectionId = 2,
                            Status = "available"
                        },
                        new
                        {
                            Id = 70,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 71,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 72,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 73,
                            SectionId = 6,
                            Status = "available"
                        },
                        new
                        {
                            Id = 74,
                            SectionId = 3,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 75,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 76,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 77,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 78,
                            SectionId = 1,
                            Status = "available"
                        },
                        new
                        {
                            Id = 79,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 80,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 81,
                            SectionId = 3,
                            Status = "unavailable"
                        },
                        new
                        {
                            Id = 82,
                            SectionId = 1,
                            Status = "available"
                        },
                        new
                        {
                            Id = 83,
                            SectionId = 1,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 84,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 85,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 86,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 87,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 88,
                            SectionId = 4,
                            Status = "available"
                        },
                        new
                        {
                            Id = 89,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 90,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 91,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 92,
                            SectionId = 3,
                            Status = "available"
                        },
                        new
                        {
                            Id = 93,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 94,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 95,
                            SectionId = 2,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 96,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 97,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 98,
                            SectionId = 5,
                            Status = "available"
                        },
                        new
                        {
                            Id = 99,
                            SectionId = 3,
                            Status = "booked"
                        },
                        new
                        {
                            Id = 100,
                            SectionId = 4,
                            Status = "available"
                        });
                });

            modelBuilder.Entity("cms_server.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FloorId = 1,
                            Name = "Section A1"
                        },
                        new
                        {
                            Id = 2,
                            FloorId = 2,
                            Name = "Section A2"
                        },
                        new
                        {
                            Id = 3,
                            FloorId = 3,
                            Name = "Section A3"
                        },
                        new
                        {
                            Id = 4,
                            FloorId = 4,
                            Name = "Section B1"
                        },
                        new
                        {
                            Id = 5,
                            FloorId = 5,
                            Name = "Section B2"
                        },
                        new
                        {
                            Id = 6,
                            FloorId = 6,
                            Name = "Section B3"
                        });
                });

            modelBuilder.Entity("cms_server.Models.Floor", b =>
                {
                    b.HasOne("cms_server.Models.Building", null)
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("cms_server.Models.Niche", b =>
                {
                    b.HasOne("cms_server.Models.Section", null)
                        .WithMany("Niches")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("cms_server.Models.Section", b =>
                {
                    b.HasOne("cms_server.Models.Floor", null)
                        .WithMany("Sections")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("cms_server.Models.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("cms_server.Models.Floor", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("cms_server.Models.Section", b =>
                {
                    b.Navigation("Niches");
                });
#pragma warning restore 612, 618
        }
    }
}
